{"version":3,"sources":["src/util/id.const.ts","src/util/randomValue.ts","src/util/id.ts","src/util/randomNumber.ts","src/galaxy/atmosphere/atmosphere.ts","src/galaxy/temperature/temperature.ts","src/galaxy/species/species.ts","src/util/generateEntities.ts","src/galaxy/system/planet/facilities/facility/facility.ts","src/galaxy/system/planet/facilities/facilities.ts","src/galaxy/system/planet/planet.ts","src/galaxy/system/wormhole/wormhole.ts","src/galaxy/system/system.ts","src/galaxy/galaxy.ts","src/index.ts",".yarn/unplugged/parcel-bundler-npm-1.12.4-a8e54cfc66/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["/** source data for id generation */\r\nexport const idSource = 'abcdefghijklmnopqrstuvwxyz0123456789';\r\n","/** get random value from array */\r\nconst RandomValue = <T>(values: T[]): T =>\r\n  values[Math.floor(Math.random() * values.length)];\r\n\r\nexport default RandomValue;\r\n","import { idSource } from './id.const';\r\nimport RandomValue from './randomValue';\r\n\r\n/** generate random id */\r\nconst ID = (): string => {\r\n  const id: string[] = [];\r\n  const template = idSource\r\n    .split('')\r\n    .sort(() => (Math.random() > 0.5 ? -1 : +1));\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    id.push(RandomValue(template));\r\n  }\r\n\r\n  return id.join('');\r\n};\r\n\r\nexport default ID;\r\n","/** get random value from range */\r\nconst RandomNumber = (to?: number, from?: number): number =>\r\n  Math.floor(Math.random() * (to ?? 100)) + (from ?? 0);\r\n\r\nexport default RandomNumber;\r\n","import ID from '../../util/id';\r\nimport RandomNumber from '../../util/randomNumber';\r\n\r\n/** sparse atmosphere */\r\nexport const atmosphereTypeVacuum = 0;\r\n/** hydrogen and helium atmosphere */\r\nexport const atmosphereTypeHydrogenHelium = 1;\r\n/** nitrogen and carbon dioxide atmosphere */\r\nexport const atmosphereTypeNitrogenCarbonDioxide = 2;\r\n/** nitrogen and methane atmosphere */\r\nexport const atmosphereTypeNitrogenMethane = 3;\r\n/** nitrogen and oxygen atmosphere (sol) */\r\nexport const atmosphereTypeNitrogenOxygen = 4;\r\n\r\n/** list of atmosphere types */\r\nexport const atmosphereTypes = [\r\n  atmosphereTypeVacuum,\r\n  atmosphereTypeHydrogenHelium,\r\n  atmosphereTypeNitrogenCarbonDioxide,\r\n  atmosphereTypeNitrogenMethane,\r\n  atmosphereTypeNitrogenOxygen,\r\n];\r\n\r\n/** atmosphere union type */\r\nexport type TAtmosphereType =\r\n  | typeof atmosphereTypeVacuum\r\n  | typeof atmosphereTypeHydrogenHelium\r\n  | typeof atmosphereTypeNitrogenCarbonDioxide\r\n  | typeof atmosphereTypeNitrogenMethane\r\n  | typeof atmosphereTypeNitrogenOxygen;\r\n\r\n/** atmosphere description */\r\nexport type TAtmosphere = {\r\n  id: string;\r\n  type: number[];\r\n};\r\n\r\n/** atmosphere options */\r\nexport type TAtmosphereOptions = Partial<TAtmosphere> | Atmosphere;\r\n\r\n/** atmosphere data */\r\nexport default class Atmosphere implements TAtmosphere {\r\n  id: string;\r\n  type: number[];\r\n\r\n  constructor(options?: TAtmosphereOptions) {\r\n    this.id = options?.id ?? ID();\r\n    this.type = this.generateAtmosphere(options?.type);\r\n  }\r\n\r\n  generateAtmosphere(options?: number[]): number[] {\r\n    if (options instanceof Array && options.length) {\r\n      return options;\r\n    }\r\n    return [...atmosphereTypes]\r\n      .sort(() => (Math.random() >= 0.5 ? -1 : 1))\r\n      .slice(0, RandomNumber(3, 1));\r\n  }\r\n}\r\n","import ID from '../../util/id';\r\nimport RandomValue from '../../util/randomValue';\r\n\r\n/** sparse temperature */\r\nexport const temperatureTypeVeryCold = 0;\r\n/** hydrogen and helium temperature */\r\nexport const temperatureTypeCold = 1;\r\n/** nitrogen and carbon dioxide temperature */\r\nexport const temperatureTypeNeutral = 2;\r\n/** nitrogen and methane temperature */\r\nexport const temperatureTypeHot = 3;\r\n/** nitrogen and oxygen temperature (sol) */\r\nexport const temperatureTypeVeryHot = 4;\r\n\r\n/** list of temperature types */\r\nexport const temperatureTypes = [\r\n  temperatureTypeVeryCold,\r\n  temperatureTypeCold,\r\n  temperatureTypeNeutral,\r\n  temperatureTypeHot,\r\n  temperatureTypeVeryHot,\r\n];\r\n\r\n/** temperature union type */\r\nexport type TTemperatureType =\r\n  | typeof temperatureTypeVeryCold\r\n  | typeof temperatureTypeCold\r\n  | typeof temperatureTypeNeutral\r\n  | typeof temperatureTypeHot\r\n  | typeof temperatureTypeVeryHot;\r\n\r\n/** temperature description */\r\nexport type TTemperature = {\r\n  id: string;\r\n  type: number;\r\n};\r\n\r\n/** temperature options */\r\nexport type TTemperatureOptions = Partial<TTemperature> | Temperature;\r\n\r\n/** temperature data */\r\nexport default class Temperature implements TTemperature {\r\n  id: string;\r\n  type: number;\r\n\r\n  constructor(options?: TTemperatureOptions) {\r\n    this.id = options?.id ?? ID();\r\n    this.type = this.generateTemperature(options?.type);\r\n  }\r\n\r\n  generateTemperature(options?: number): number {\r\n    if (typeof options === 'number') {\r\n      return options;\r\n    }\r\n    return RandomValue(temperatureTypes);\r\n  }\r\n}\r\n","import ID from '../../util/id';\r\nimport Atmosphere from '../atmosphere/atmosphere';\r\nimport Temperature from '../temperature/temperature';\r\n\r\n/** activities shared by species */\r\nexport type TSpeciesCommonActivities = {\r\n  /** trading affects construction points generation per cycle */\r\n  trade: boolean;\r\n  /** route sharing allows to get random information about routes known to other species */\r\n  routeSharing: boolean;\r\n  /** research affects research points generation per cycle */\r\n  research: boolean;\r\n};\r\n\r\n/** initial relations */\r\nexport const speciesRelationsTypeNeutral = 0;\r\n/** is species are allied they can share their activities */\r\nexport const speciesRelationsTypeAllies = 1;\r\n/** these relations will end by extinction */\r\nexport const speciesRelationsTypeWar = 2;\r\n\r\n/** species relations union type */\r\nexport type TSpeciesRelationsType =\r\n  | typeof speciesRelationsTypeNeutral\r\n  | typeof speciesRelationsTypeAllies\r\n  | typeof speciesRelationsTypeWar;\r\n\r\n/** species relations description */\r\nexport type TSpeciesRelations = {\r\n  [speciesId: string]: {\r\n    /** current relations */\r\n    relations: TSpeciesRelationsType;\r\n    /** common activities */\r\n    activities: TSpeciesCommonActivities;\r\n  };\r\n};\r\n\r\n/** species description */\r\nexport type TSpecies = {\r\n  /** species id */\r\n  id: string;\r\n  /** species name */\r\n  name: string;\r\n  /** species flag */\r\n  flag: string;\r\n  /** species atmosphere */\r\n  atmosphere: Atmosphere;\r\n  /** species temperature */\r\n  temperature: Temperature;\r\n  /** relations with other species */\r\n  relations: TSpeciesRelations;\r\n};\r\n\r\n/** species options */\r\nexport type TSpeciesOptions = Partial<TSpecies> | Species;\r\n\r\n/** species data */\r\nexport default class Species implements TSpecies {\r\n  id: string;\r\n  name: string;\r\n  flag: string;\r\n  atmosphere: Atmosphere;\r\n  temperature: Temperature;\r\n  relations: TSpeciesRelations;\r\n\r\n  constructor(options?: TSpeciesOptions) {\r\n    this.id = options?.id ?? ID();\r\n    this.name = options?.name ?? ``;\r\n    this.flag = options?.flag ?? ``;\r\n    this.atmosphere = new Atmosphere(options?.atmosphere);\r\n    this.temperature = new Temperature(options?.temperature);\r\n    this.relations = options?.relations ?? {};\r\n  }\r\n}\r\n","import { TEntity } from '../types';\r\n\r\n/** generate data from source */\r\nconst GenerateEntities = <T>(\r\n  type: TEntity<T>,\r\n  length: number,\r\n  options?: T[]\r\n): T[] => {\r\n  if (options instanceof Array && options.length) {\r\n    return options.map(source => new type(source));\r\n  }\r\n  return Array.from({ length }, () => new type());\r\n};\r\n\r\nexport default GenerateEntities;\r\n","import ID from '../../../../../util/id';\r\n\r\n/** undefined facility type */\r\nexport const facilityTypeNotSet = 0;\r\n/** construction facility type */\r\nexport const facilityTypeConstruction = 1;\r\n/** espionage facility type */\r\nexport const facilityTypeEspionage = 2;\r\n/** population facility type */\r\nexport const facilityTypePopulation = 3;\r\n/** research facility type */\r\nexport const facilityTypeResearch = 4;\r\n\r\n/** facilities union type */\r\nexport type TFacilityType =\r\n  | typeof facilityTypeNotSet\r\n  | typeof facilityTypeConstruction\r\n  | typeof facilityTypeEspionage\r\n  | typeof facilityTypePopulation\r\n  | typeof facilityTypeResearch;\r\n\r\n/** default facility rate */\r\nexport const facilityRateDefault = 0.1;\r\n/** facility rate 0.1 */\r\nexport const facilityRate1 = facilityRateDefault;\r\n/** facility rate 0.2 */\r\nexport const facilityRate2 = facilityRate1 + facilityRate1;\r\n/** facility rate 0.3 */\r\nexport const facilityRate3 = facilityRate1 + facilityRate2;\r\n/** facility rate 0.5 */\r\nexport const facilityRate4 = facilityRate2 + facilityRate3;\r\n/** facility rate 0.8 */\r\nexport const facilityRate5 = facilityRate3 + facilityRate4;\r\n/** facility rate 1.3 */\r\nexport const facilityRate6 = facilityRate4 + facilityRate5;\r\n/** facility rate 2.1 */\r\nexport const facilityRate7 = facilityRate5 + facilityRate6;\r\n\r\n/** list of facilities rates */\r\nexport const facilityRates = [\r\n  facilityRateDefault,\r\n  facilityRate1,\r\n  facilityRate2,\r\n  facilityRate3,\r\n  facilityRate4,\r\n  facilityRate5,\r\n  facilityRate6,\r\n  facilityRate7,\r\n];\r\n\r\n/** base facility cost */\r\nexport const facilityCostDefault = 1e3;\r\n/** facility cost multiplier */\r\nexport const facilityCostRate = 1e4;\r\n\r\n/** initial operation level */\r\nexport const facilityOperationLevelDefault = 0;\r\n/** maximum operation level */\r\nexport const facilityOperationLevelMaximum = 100;\r\n\r\n/** facility description */\r\nexport type TFacility = {\r\n  /** facility id */\r\n  id: string;\r\n  /** facility name */\r\n  name: string;\r\n  /** facility type */\r\n  type: TFacilityType;\r\n  /** facility points production rate */\r\n  rate: number;\r\n  /** level of readiness from 0 to 100 */\r\n  operationLevel: number;\r\n  /** construction cost in construction points */\r\n  cost: number;\r\n};\r\n\r\n/** facility options */\r\nexport type TFacilityOptions = Partial<TFacility> | Facility;\r\n\r\n/** facility data */\r\nexport default class Facility implements TFacility {\r\n  id: string;\r\n  name: string;\r\n  type: TFacilityType;\r\n  rate: number;\r\n  operationLevel: number;\r\n  cost: number;\r\n\r\n  constructor(options?: TFacilityOptions) {\r\n    this.id = options?.id ?? ID();\r\n    this.name = options?.name ?? ``;\r\n    this.type = options?.type ?? facilityTypeNotSet;\r\n    this.rate = options?.rate ?? facilityRateDefault;\r\n    this.operationLevel =\r\n      options?.operationLevel ?? facilityOperationLevelDefault;\r\n    this.cost = options?.cost ?? facilityCostDefault;\r\n  }\r\n}\r\n","import Facility, {\r\n  facilityCostDefault,\r\n  facilityOperationLevelDefault,\r\n  facilityRates,\r\n  facilityTypeConstruction,\r\n  facilityTypeEspionage,\r\n  facilityTypePopulation,\r\n  facilityTypeResearch,\r\n  TFacility,\r\n  TFacilityOptions,\r\n  TFacilityType,\r\n} from './facility/facility';\r\n\r\n/** maximum amount of facilities of any type */\r\nexport const facilitiesCount = 8;\r\n\r\n/** facilities structure */\r\nexport type TFacilities = {\r\n  /** list of construction facilities */\r\n  construction: Facility[];\r\n  /** list of espionage facilities */\r\n  espionage: Facility[];\r\n  /** list of population facilities */\r\n  population: Facility[];\r\n  /** list of research facilities */\r\n  research: Facility[];\r\n};\r\n\r\n/** facilities options */\r\nexport type TFacilitiesOptions = Partial<TFacilities> | Facilities;\r\n\r\n/** facilities data */\r\nexport default class Facilities implements TFacilities {\r\n  construction: Facility[];\r\n  espionage: Facility[];\r\n  population: Facility[];\r\n  research: Facility[];\r\n\r\n  constructor(options?: TFacilitiesOptions) {\r\n    this.construction = this.generateFacilities(\r\n      facilityTypeConstruction,\r\n      options?.construction\r\n    );\r\n    this.espionage = this.generateFacilities(\r\n      facilityTypeEspionage,\r\n      options?.espionage\r\n    );\r\n    this.population = this.generateFacilities(\r\n      facilityTypePopulation,\r\n      options?.population\r\n    );\r\n    this.research = this.generateFacilities(\r\n      facilityTypeResearch,\r\n      options?.research\r\n    );\r\n  }\r\n\r\n  /** get facility name by type */\r\n  facilityType(type: TFacilityType): string {\r\n    if (type === facilityTypeConstruction) {\r\n      return `construction`;\r\n    }\r\n    if (type === facilityTypeEspionage) {\r\n      return `espionage`;\r\n    }\r\n    if (type === facilityTypePopulation) {\r\n      return `population`;\r\n    }\r\n    if (type === facilityTypeResearch) {\r\n      return `research`;\r\n    }\r\n    return `unknown`;\r\n  }\r\n\r\n  /** get facility settings */\r\n  facilitySettings(\r\n    level: number,\r\n    rate: number,\r\n    type: TFacilityType\r\n  ): TFacilityOptions {\r\n    return {\r\n      name: `${level} level ${this.facilityType(type)}`,\r\n      type: type,\r\n      rate: rate,\r\n      operationLevel: facilityOperationLevelDefault,\r\n      cost: Math.floor(level * (facilityCostDefault + 1e4 * rate)),\r\n    };\r\n  }\r\n\r\n  /** generate default facilities list */\r\n  generateFacilitiesList(type: TFacilityType): Facility[] {\r\n    return Array.from(\r\n      { length: facilitiesCount },\r\n      (value, index) =>\r\n        new Facility(this.facilitySettings(index, facilityRates[index], type))\r\n    );\r\n  }\r\n\r\n  /** restore facilities list from options or generate default list */\r\n  generateFacilities(type: TFacilityType, options?: TFacility[]): Facility[] {\r\n    if (options instanceof Array && options.length === 8) {\r\n      return options.map(source => new Facility(source));\r\n    }\r\n    return this.generateFacilitiesList(type);\r\n  }\r\n}\r\n","import ID from '../../../util/id';\r\nimport RandomNumber from '../../../util/randomNumber';\r\nimport Atmosphere from '../../atmosphere/atmosphere';\r\nimport Species from '../../species/species';\r\nimport Temperature from '../../temperature/temperature';\r\nimport Facilities from './facilities/facilities';\r\n\r\n/** planet description */\r\nexport type TPlanet = {\r\n  /** planet id */\r\n  id: string;\r\n  /** planet name */\r\n  name: string;\r\n  /** planet populated */\r\n  populated: boolean;\r\n  /** level of abundance */\r\n  abundance: number;\r\n  /** size of planet */\r\n  size: number;\r\n  /** planet atmosphere */\r\n  atmosphere: Atmosphere;\r\n  /** planet temperature */\r\n  temperature: Temperature;\r\n  /** amount of construction points generated per cycle */\r\n  constructionPoints: number;\r\n  /** amount of espionage points generated per cycle */\r\n  espionagePoints: number;\r\n  /** amount of research points generated per cycle */\r\n  researchPoints: number;\r\n  /** amount of population produced per cycle */\r\n  populationPoints: number;\r\n  /** initial maximum population */\r\n  populationMaximumInitial: number;\r\n  /** maximum population */\r\n  populationMaximum: number;\r\n  /** current population of the planet */\r\n  population: number;\r\n  /** initial maximum defense points */\r\n  defensePointsMaximumInitial: number;\r\n  /** current maximum defense points */\r\n  defensePointsMaximum: number;\r\n  /** defense points produced per cycle */\r\n  defensePoints: number;\r\n  /** list of facilities */\r\n  facilities: Facilities;\r\n  /** current planet occupants */\r\n  species?: Species;\r\n};\r\n\r\n/** planet options */\r\nexport type TPlanetOptions = Partial<TPlanet> | Planet;\r\n\r\n/** planet data */\r\nexport default class Planet implements TPlanet {\r\n  id: string;\r\n  name: string;\r\n  populated: boolean;\r\n  abundance: number;\r\n  size: number;\r\n  atmosphere: Atmosphere;\r\n  temperature: Temperature;\r\n  constructionPoints: number;\r\n  espionagePoints: number;\r\n  researchPoints: number;\r\n  populationPoints: number;\r\n  populationMaximumInitial: number;\r\n  populationMaximum: number;\r\n  population: number;\r\n  defensePointsMaximumInitial: number;\r\n  defensePointsMaximum: number;\r\n  defensePoints: number;\r\n  facilities: Facilities;\r\n  species?: Species;\r\n\r\n  constructor(options?: TPlanetOptions) {\r\n    this.id = options?.id ?? ID();\r\n    this.name = options?.name ?? ``;\r\n    this.populated = options?.populated ?? false;\r\n    this.abundance = options?.abundance ?? RandomNumber(12, 1);\r\n    this.size = options?.size ?? RandomNumber(7, 1);\r\n    this.atmosphere = new Atmosphere(options?.atmosphere);\r\n    this.temperature = new Temperature(options?.temperature);\r\n    this.constructionPoints = options?.constructionPoints ?? 0;\r\n    this.espionagePoints = options?.espionagePoints ?? 0;\r\n    this.researchPoints = options?.researchPoints ?? 0;\r\n    this.populationPoints = options?.populationPoints ?? 0;\r\n    this.populationMaximumInitial =\r\n      options?.populationMaximumInitial ??\r\n      Math.floor(this.size + this.size * (this.abundance / 10));\r\n    this.populationMaximum =\r\n      options?.populationMaximum ?? this.populationMaximumInitial;\r\n    this.population = options?.population ?? 0;\r\n    this.defensePointsMaximumInitial = 0;\r\n    this.defensePointsMaximum = 0;\r\n    this.defensePoints = 0;\r\n    this.facilities = new Facilities(options?.facilities);\r\n    this.species = options?.species;\r\n  }\r\n}\r\n","import ID from '../../../util/id';\r\n\r\n/** wormhole description */\r\nexport type TWormhole = {\r\n  /** wormhole id */\r\n  id: string;\r\n};\r\n\r\n/** wormhole options */\r\nexport type TWormholeOptions = Partial<TWormhole> | Wormhole;\r\n\r\n/** wormhole data */\r\nexport default class Wormhole implements TWormhole {\r\n  id: string;\r\n\r\n  constructor(options?: TWormholeOptions) {\r\n    this.id = options?.id ?? ID();\r\n  }\r\n}\r\n","import GenerateEntities from '../../util/generateEntities';\r\nimport ID from '../../util/id';\r\nimport RandomNumber from '../../util/randomNumber';\r\nimport Governor from './governor/governor';\r\nimport Planet from './planet/planet';\r\nimport Wormhole from './wormhole/wormhole';\r\n\r\n/** species options description */\r\nexport type TSystemSpecies = {\r\n  /** species id */\r\n  speciesId: string;\r\n  /** governor of the species */\r\n  governor: Governor;\r\n  /** species discovered system */\r\n  discovered: boolean;\r\n  /** species can observe system */\r\n  observable: boolean;\r\n  /** species populated system */\r\n  populated: boolean;\r\n};\r\n\r\n/** system description */\r\nexport type TSystem = {\r\n  /** system id */\r\n  id: string;\r\n  /** specifies if system is populated */\r\n  populated: boolean;\r\n  /** number of planets */\r\n  planetsCount: number;\r\n  /** planets list */\r\n  planets: Planet[];\r\n  /** number of wormholes */\r\n  wormholesCount: number;\r\n  /** wormholes list */\r\n  wormholes: Wormhole[];\r\n  /** species options */\r\n  species: TSystemSpecies[];\r\n};\r\n\r\n/** system options */\r\nexport type TSystemOptions = Partial<TSystem> | System;\r\n\r\n/** system data */\r\nexport default class System implements TSystem {\r\n  id: string;\r\n  populated: boolean;\r\n  planetsCount: number;\r\n  planets: Planet[];\r\n  wormholesCount: number;\r\n  wormholes: Wormhole[];\r\n  species: TSystemSpecies[];\r\n\r\n  constructor(options?: TSystemOptions) {\r\n    this.id = options?.id ?? ID();\r\n    this.populated = options?.populated ?? false;\r\n    this.planetsCount = options?.planetsCount ?? RandomNumber(7, 2);\r\n    this.planets = GenerateEntities(\r\n      Planet,\r\n      this.planetsCount,\r\n      options?.planets\r\n    );\r\n    this.wormholesCount = options?.wormholesCount ?? RandomNumber(4, 1);\r\n    this.wormholes = GenerateEntities(\r\n      Wormhole,\r\n      this.wormholesCount,\r\n      options?.wormholes\r\n    );\r\n    this.species = options?.species ?? [];\r\n    this.setup();\r\n  }\r\n\r\n  /** setup system after creation */\r\n  setup(): void {\r\n    this.populated = !!this.species.some(s => s.populated);\r\n  }\r\n\r\n  /** populate system at the start */\r\n  populate(): void {}\r\n\r\n  /** user colonizes system */\r\n  colonize(): void {}\r\n}\r\n","import ID from '../util/id';\r\nimport Species, { speciesRelationsTypeNeutral } from './species/species';\r\nimport System from './system/system';\r\n\r\nexport type TGalaxy = {\r\n  id: string;\r\n  systemsCount: number;\r\n  systems: System[];\r\n  speciesCount: number;\r\n  species: Species[];\r\n};\r\n\r\nexport type TGalaxyOptions = Partial<TGalaxy> | Galaxy;\r\n\r\nexport default class Galaxy implements TGalaxy {\r\n  id: string;\r\n  systemsCount: number;\r\n  systems: System[];\r\n  speciesCount: number;\r\n  species: Species[];\r\n\r\n  constructor(options?: TGalaxyOptions) {\r\n    this.id = options?.id ?? ID();\r\n    this.systemsCount = options?.systemsCount ?? 10;\r\n    this.systems = this.generateSystems(options?.systems);\r\n    this.speciesCount = options?.speciesCount ?? 3;\r\n    this.species = this.generateSpecies(options?.species);\r\n  }\r\n\r\n  generateSystems(options?: System[]): System[] {\r\n    if (options instanceof Array && options.length) {\r\n      return options.map(source => new System(source));\r\n    }\r\n    return Array.from({ length: this.systemsCount }, () => new System());\r\n  }\r\n\r\n  generateSpecies(options?: Species[]): Species[] {\r\n    if (options instanceof Array && options.length) {\r\n      return options.map(source => new Species(source));\r\n    }\r\n    const species = Array.from(\r\n      { length: this.speciesCount },\r\n      () => new Species()\r\n    );\r\n    species.forEach(s => {\r\n      species.forEach(d => {\r\n        if (s.id !== d.id) {\r\n          s.relations[d.id] = {\r\n            activities: { research: false, routeSharing: false, trade: false },\r\n            relations: speciesRelationsTypeNeutral,\r\n          };\r\n        }\r\n      });\r\n    });\r\n    return species;\r\n  }\r\n}\r\n","import Galaxy from './galaxy/galaxy';\r\n\r\nconst start = new Date().getTime();\r\n(document as any).g = new Galaxy();\r\nconsole.log(`generation time: ${new Date().getTime() - start}`);\r\n\r\nconst app = document.getElementById('app');\r\nif (app) {\r\n  app.innerHTML = 'q';\r\n  app.innerHTML += `<pre>${JSON.stringify((document as any).g, null, 2)}</pre>`;\r\n}\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}